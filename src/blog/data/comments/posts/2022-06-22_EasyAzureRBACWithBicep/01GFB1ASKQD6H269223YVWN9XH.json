{
  "id": "01GFB1ASKQD6H269223YVWN9XH",
  "displayName": "Jens",
  "postedDate": "2022-10-14T10:41:10.2678962+00:00",
  "content": "Hi Jos, well done! Do you have any idea how to update an existing roleDefinition if you only want to use the known roleName?\r\n\u0060\u0060\u0060bicep\r\nresource roleDef \u0027Microsoft.Authorization/roleDefinitions@2022-04-01\u0027 existing = {\r\n    name: \u0027roleName\u0027 // NOT GUID \r\n}\r\n\u0060\u0060\u0060\r\nfor later use of e.g.:\r\n\u0060\u0060\u0060bicep\r\n var realid = roleDef.id\r\n\u0060\u0060\u0060\r\n\r\nWasn\u0027t successful to update existing roleDefinitions with bicep due to the issue that I have to know the GUID for it as the mandatory name property. :(\r\n",
  "authorComment": false,
  "replies": [
    {
      "id": "01GFBB4Q2DEA633T533FHG88V0",
      "displayName": "Jos van der Til",
      "postedDate": "2022-10-14T13:32:36.8152084+00:00",
      "content": "Hi Jens,\r\n\r\nI am not quite sure if I understand your question. You want to find the name (guid) of an existing role assignment by using the role name such as \u0027Storage Blob Data Reader\u0027? If so, I unfortunately do not know of a way to do that in Bicep.\r\n\r\nI know you can download a CSV or JSON file of all the role assignments on a resource in the Azure Portal, which might be of some help.\r\nAlternatively, you can use the AzCLI to get what you want using: \u0060az role assignment list --scope \u003Cresource id\u003E --role \u0022\u003Crole name\u003E\u0022\u0060\r\n\r\nHope this helps!\r\n",
      "authorComment": true,
      "replies": [
        {
          "id": "01GFJPK61VXGRA85EJ3X650J83",
          "displayName": "Jens",
          "postedDate": "2022-10-17T10:07:26.2688516+00:00",
          "content": "Hi Jos, \r\nthanks for tryin to help. Yes, you got me correct. But meanwhile I understand and found my issue.\r\n\r\ntargetScope=\u0027resourceGroup\u0027\r\n\r\n@description(\u0027creating new custom role with limited rights\u0027)\r\n\r\nparam resourceGroupName string\r\n// param location string\r\nparam actions array = [\r\n  \u0027Microsoft.ServiceBus/namespaces/queues/write\u0027\r\n  \u0027Microsoft.ServiceBus/namespaces/queues/read\u0027\r\n  \u0027Microsoft.ServiceBus/namespaces/queues/Delete\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/read\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/delete\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/read\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/lease/action\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/write\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/write\u0027\r\n  \u0027Microsoft.Resources/deployments/*\u0027\r\n  \u0027Microsoft.Resources/deploymentScripts/*\u0027\r\n]\r\nparam notActions array = []\r\nparam dataActions array = [\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete\u0027\r\n  \u0027Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write\u0027\r\n  \u0027Microsoft.ServiceBus/namespaces/messages/send/action\u0027\r\n  \u0027Microsoft.ServiceBus/namespaces/messages/receive/action\u0027\r\n]\r\nparam notDataActions array = []\r\nparam roleDescription string = \u0027Custom role\u0027\r\n\r\n\r\nvar roleDefName = guid(resourceGroup().id, string(actions), string(notActions), string(dataActions), string(notDataActions))\r\n\r\nresource roleDef \u0027Microsoft.Authorization/roleDefinitions@2018-01-01-preview\u0027 = {\r\n  name: roleDefName\r\n  properties: {\r\n    roleName: \u0027${resourceGroupName}-min-RW\u0027\r\n    description: roleDescription\r\n    type: \u0027customRole\u0027\r\n    permissions: [\r\n      {\r\n        actions: actions\r\n        notActions: notActions\r\n        dataActions: dataActions\r\n        notDataActions: notDataActions\r\n      }\r\n    ]\r\n    assignableScopes: [\r\n      resourceGroup().id\r\n    ]\r\n  }\r\n}\r\n\r\nMy mistake was to generate the name like this: var roleDefName = guid(resourceGroup().id, string(actions), string(notActions), string(dataActions), string(notDataActions))\r\n\r\nWhen I add now an entry to actions, dataActions etc. of course the guid generates a new one instead of using the existing one which was my expectation.\r\nSo the fix for me was just to change to: var roleDefName = guid(resourceGroup().id)\r\nNow I am able to change the role when adding or dropping rights. ^^ \r\nThx a lot again\r\n",
          "authorComment": false,
          "replies": []
        }
      ]
    }
  ]
}
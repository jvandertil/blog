{
  "id": "01EPVDAN1VFZGJXS407DMG8XXW",
  "displayName": "Nico",
  "postedDate": "2020-11-11T10:23:55.4622251+00:00",
  "content": "Hi,\r\n\r\nI stumbled upon your article while searching how the hell we should create a user in an Azure SQL database via DevOps. As none of the options seem to work. \u0027Authenticate\u0027 property unsupported in powershell 5 and up. Integrated security uses agent identity instead of service connection and a sql user just isn\u0027t allowed to run the \u0027from external provider\u0027\r\nI see you use an EXE for this. Is this EXE part of your build and you run it from the azure agent if I read it correctly? ",
  "authorComment": false,
  "replies": [
    {
      "id": "01EPWRZN034FXFQ0GX37N3E68D",
      "displayName": "Jos van der Til",
      "postedDate": "2020-11-11T23:06:52.3092262+00:00",
      "content": "Hi Nico,\r\n\r\nYou understand correctly, I am running the EXE from the Azure DevOps agent. Unfortunately, I don\u0027t think it is possible to use the service connection as an authentication mechanism towards Azure SQL. I believe I researched that a little bit, but it breaks down when trying to access the AzureSQL itself. Have you checked out the GitHub repository I linked in the post: https://github.com/jvandertil/AzureSqlAppIdentityAuthTool ? There is a README in the repository that might shed some light on how it actually works, plus it includes the source code for the EXE I mention in the post.\r\n\r\nI hope this helps you out, if not feel free to reach out again.\r\n ",
      "authorComment": true,
      "replies": [
        {
          "id": "01EPY0HWY4613XMS44Y0791P0V",
          "displayName": "Nico",
          "postedDate": "2020-11-12T10:38:24.7250583+00:00",
          "content": "Well, we are running into an issue on adding the firewall rule which seems to fail.\r\nThe code above is always giving (missing parameter --end-ip-address), so we refactored it to the new way to do so, using Invoke-WebRequest to get the IP, but this one is giving the \u0027run az login\u0027 error we are still looking into\r\nHowever for the next step, I would assume that instead of using the EXE, we could just as well do it in powershell v4, using the System.Data.SqlClient in powershell",
          "authorComment": false,
          "replies": [
            {
              "id": "01EPY8052PF3BR0N6YG5BQW20Y",
              "displayName": "Jos van der Til",
              "postedDate": "2020-11-12T12:48:31.8419396+00:00",
              "content": "It sounds like you are running the retrieving of the IP address and adding the firewall rule in 1 step. As it is presented here you will have to use 2 steps, or adjust the code to use a PowerShell variable instead of a Azure DevOps variable (slightly different syntax).\r\n\r\nSince you are getting errors indicating that \u0027az\u0027 is not logged in, it sounds like you are running the \u0060az\u0060 command in something else than a Azure CLI step (see the [Microsoft Docs](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli?view=azure-devops) for more). Make sure that you use the Azure CLI step, then Azure DevOps will use the service connection to log you in to Azure, and then the \u0027az\u0027 command will work.\r\n\r\nI\u0027ll see if I can find some time to add an example Azure DevOps pipeline, either here or in the repository.",
              "authorComment": true,
              "replies": [
                {
                  "id": "01EQ0K72HVC1ZQ9VGXT1T4BPZE",
                  "displayName": "Nico",
                  "postedDate": "2020-11-13T10:43:01.8256136+00:00",
                  "content": "Hi Jos,\r\n\r\nYou were correct. We now added the firewall rule and this works, but when executing the query and opening the connection string, we can\u0027t get connected because of \r\nSystem.Management.Automation.MethodInvocationException: Exception calling \u0022Open\u0022 with \u00220\u0022 argument(s): \u0022One or more errors occurred.\u0022 ---\u003E System.AggregateException: One or more errors occurred. ---\u003E System.AggregateException: One or more errors occurred. ---\u003E AdalException: Could not discover a user realm.\r\n\r\nWe tried adding a new user via on-premise AD that syncs to AAD, an account created in AAD, and with the sql admin account that is being created when setting up the sql server through ARM templates. Seems everyone struggles with this stuff",
                  "authorComment": false,
                  "replies": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}